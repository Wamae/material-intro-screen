apply plugin: 'com.android.library'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 2
        versionName "0.0.7"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            defaultPublishConfig "debug"
        }

        android.libraryVariants.all { variant ->
            project.task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
                title = "Documentation for Android $project.android.defaultConfig.versionName v$project.android.defaultConfig.versionCode"
                description = "Generates Javadoc for $variant.name."
                group = 'Documentation'

                destinationDir = new File("${project.getProjectDir()}/javaDoc/", variant.baseName)
                source = variant.javaCompile.source

                ext.androidJar = "${project.android.sdkDirectory}/platforms/${project.android.compileSdkVersion}/android.jar"
//                classpath = project.files(variant.javaCompile.classpath.files) + project.files(ext.androidJar)
                doFirst { classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar) }

                options.memberLevel = JavadocMemberLevel.PROTECTED
                options.links("http://docs.oracle.com/javase/7/docs/api/")
                options.links("http://developer.android.com/reference/")
                options.tags = ['sample']
                exclude '**/BuildConfig.java'
                exclude '**/R.java'
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    dependencies {
        implementation fileTree(include: ['*.jar'], dir: 'libs')
        implementation 'androidx.appcompat:appcompat:1.0.2'
        implementation 'com.google.android.material:material:1.0.0'
        androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    }

}